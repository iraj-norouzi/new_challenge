upstream cache_servers1 {
 hash $scheme$proxy_host$request_uri consistent;
 server 10.11.12.234;
}

upstream cache_servers2 {
 hash $scheme$proxy_host$request_uri consistent;
 server 10.11.12.231;
}


proxy_cache_path /cdn levels=1:2 keys_zone=igap_cache:720m max_size=11m inactive=720m use_temp_path=off;

server {
    listen       443 ssl;
    server_name  cdn.igap.net;
    server_tokens off;
    ssl                  on;
    ssl_certificate      /root/cert/cdn.igap.net.crt;
    ssl_certificate_key  /root/cert/cdn.igap.net.key;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_dhparam          /root/cert/dhparam.pem;
    ssl_prefer_server_ciphers on;
    ssl_ciphers  HIGH:!aNULL:!MD5;

    access_log false;
    #access_log /var/log/nginx/access.log;
    error_log false;
   
    proxy_cache_key $scheme$proxy_host$request_uri;
 
     location ~* ([\da-iA-I])(=|%3D) {
       proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_cache igap_cache;
        proxy_cache_valid 200 206 720m;
        proxy_cache_revalidate on;
       # proxy_cache_min_uses 10;
        proxy_cache_methods GET HEAD ;
        proxy_pass http://cache_servers2;
        proxy_set_header   Host             $http_host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
       proxy_cache_bypass $http_upgrade;
     }

    location / {
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_cache igap_cache;
        proxy_cache_valid 200 206 720m;
        proxy_cache_revalidate on;
       # proxy_cache_min_uses 10;
        proxy_cache_methods GET HEAD ;
        proxy_pass http://cache_servers1;
        proxy_request_buffering off;
        proxy_buffering off;
        proxy_set_header   Host             $http_host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        proxy_cache_bypass $http_upgrade;
     }
}
